{
  "swagger": "2.0",
  "info": {
    "description": "Backend ::Deliah Restó:: App",
    "version": "1.0.0",
    "title": "Deliah Restó REST API",
    "contact": {
      "email": "turcoalv@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "localhost:5000",
  "basePath": "/api",
  "tags": [
    {
      "name": "User",
      "description": "User endpoints"
    },
    {
      "name": "Product",
      "description": "Product endpoints"
    },
    {
      "name": "Order",
      "description": "Order endpoints"
    },
    {
      "name": "Authentication",
      "description": "Authentication endpoints"
    }
  ],
  "schemes": ["https"],
  "paths": {
    "/auth/signup": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Creates a new user",
        "description": "",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "Resource not found"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Login with an exixting user account, returns token",
        "description": "",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string"
                },
                "_id": {
                  "type": "integer",
                  "format": "int64"
                },
                "username": {
                  "type": "string"
                },
                "fullName": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "phone": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "isAdmin": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          "404": {
            "description": "Resource not found"
          }
        }
      }
    },
    "/user": {
      "get": {
        "tags": ["User"],
        "summary": "Finds All the Users",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization token with admin role is required",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/product": {
      "get": {
        "tags": ["Product"],
        "summary": "Finds All the Products",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization token is required",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Product"
              }
            }
          },
          "400": {
            "description": "Token must be sent"
          },
          "401": {
            "description": "Invalid Token"
          },
          "404": {
            "description": "Entity wasnt found"
          }
        }
      },
      "post": {
        "tags": ["Product"],
        "summary": "Creates a new product",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization token with admin role is required",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        }
      }
    },
    "/order": {
      "get": {
        "tags": ["Order"],
        "summary": "Finds All the Orders",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization token with admin role is required",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Order"
              }
            }
          },
          "400": {
            "description": "Token must be sent"
          },
          "401": {
            "description": "Invalid Token"
          },
          "404": {
            "description": "Entity wasnt found"
          }
        }
      },
      "post": {
        "tags": ["Order"],
        "summary": "Creates a new order",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization token with is required",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "tags": ["User"],
        "summary": "Find one user",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "User Id (users with no admin privileges can only get its own information)",
            "required": true
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization token with admin role is required ",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Token must be sent"
          },
          "401": {
            "description": "Invalid Token"
          },
          "404": {
            "description": "Entity wasnt found"
          }
        }
      },
      "patch": {
        "tags": ["User"],
        "summary": "Update one user",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "User Id (users with no admin privileges can only update its own information)",
            "required": true
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization token with admin role",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Token must be sent"
          },
          "401": {
            "description": "Invalid Token"
          },
          "404": {
            "description": "Entity wasnt found"
          }
        }
      },
      "delete": {
        "tags": ["User"],
        "summary": "Delete one user",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "User Id (users with no admin privileges can only delete its own account)",
            "required": true
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization token with admin role is required",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Token must be sent"
          },
          "401": {
            "description": "Invalid Token"
          },
          "404": {
            "description": "Entity wasnt found"
          }
        }
      }
    },
    "/product/{id}": {
      "get": {
        "tags": ["Product"],
        "summary": "Find one product",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "Product Id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "400": {
            "description": "Invalid tag value"
          }
        }
      },
      "patch": {
        "tags": ["User"],
        "summary": "Update one Product",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "Product Id",
            "required": true
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization token with admin role",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "400": {
            "description": "Invalid tag value"
          }
        }
      },
      "delete": {
        "tags": ["Product"],
        "summary": "Delete one product",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "Product Id",
            "required": true
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization token with admin role",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid tag value"
          }
        }
      }
    },
    "/order/{id}": {
      "get": {
        "tags": ["Order"],
        "summary": "Find one order",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "Order Id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          },
          "400": {
            "description": "Invalid tag value"
          }
        }
      },
      "patch": {
        "tags": ["Order"],
        "summary": "Update one user",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "User Id",
            "required": true
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization token with admin role",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid tag value"
          }
        }
      },
      "delete": {
        "tags": ["Order"],
        "summary": "Delete one order",
        "description": "",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "Order Id",
            "required": true
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization token with admin role",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid tag value"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "fullName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "isAdmin": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "Product": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "price": {
          "type": "number"
        }
      }
    },
    "Order": {
      "type": "object",
      "properties": {
        "orderStatus": {
          "type": "string",
          "enum": ["recieved", "confirmed", "preparing", "sended", "delivered"]
        },
        "_id": {
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/User"
        },
        "cart": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "integer",
                "format": "int64"
              },
              "product": {
                "$ref": "#/definitions/Product"
              },
              "quantity": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "price": {
          "type": "number"
        },
        "paymentMethod": {
          "type": "string",
          "enum": ["cash", "card"]
        },
        "date": {
          "type": "string",
          "default": "The defaul date for every order is the date and time they are created"
        }
      }
    },
    "ApiResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}
